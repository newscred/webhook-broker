// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// ConsumerConnectionConfig is an autogenerated mock type for the ConsumerConnectionConfig type
type ConsumerConnectionConfig struct {
	mock.Mock
}

// GetConnectionTimeout provides a mock function with given fields:
func (_m *ConsumerConnectionConfig) GetConnectionTimeout() time.Duration {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetConnectionTimeout")
	}

	var r0 time.Duration
	if rf, ok := ret.Get(0).(func() time.Duration); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Duration)
	}

	return r0
}

// GetTokenRequestHeaderName provides a mock function with given fields:
func (_m *ConsumerConnectionConfig) GetTokenRequestHeaderName() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetTokenRequestHeaderName")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetUserAgent provides a mock function with given fields:
func (_m *ConsumerConnectionConfig) GetUserAgent() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetUserAgent")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewConsumerConnectionConfig creates a new instance of ConsumerConnectionConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConsumerConnectionConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConsumerConnectionConfig {
	mock := &ConsumerConnectionConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
